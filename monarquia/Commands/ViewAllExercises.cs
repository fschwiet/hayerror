using System;
using System.Collections.Generic;
using System.Linq;
using ManyConsole;

namespace monarquia
{
	public class ViewExercises : ConsoleCommand
	{
		public bool LimitOutput;
		public bool UseBiggerCannedData;
        public List<string> RequiredTags = new List<string>();

		public ViewExercises ()
		{
			this.IsCommand ("view-all-exercises", "List all exercises generated by BetterCannedData.");
			this.HasOption ("z", "Reduces permutations in various ways.", v => LimitOutput = true);
			this.HasOption ("b", "Uses bigger canned data.", v => UseBiggerCannedData = true);
            this.HasOption ("t=", "Adds a required tag.", v => RequiredTags.Add(v));
            this.SkipsCommandSummaryBeforeRunning();
		}

		public override int Run (string[] remainingArguments)
		{
			DataLoader dataLoader = new DataLoader("./data");
			var cannedData = new BetterCannedData (dataLoader);

			if (UseBiggerCannedData) {
				cannedData = new BigCannedData (dataLoader);
			}

			var exerciseGenerator = new EspanolGenerator (cannedData, "./data");

			var results = exerciseGenerator.GetExercises (null, LimitOutput)
                .Where(e => !e.Tags.Contains("vosotros"));

            foreach(var requiredTag in RequiredTags)
            {
                results = results.Where(r => r.Tags.Contains(requiredTag));
            }

			Console.WriteLine (Newtonsoft.Json.JsonConvert.SerializeObject (results, Newtonsoft.Json.Formatting.Indented));

			return 0;
		}
	}
}

